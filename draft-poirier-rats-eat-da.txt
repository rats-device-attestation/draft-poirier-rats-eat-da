



WG Working Group                                              M. Poirier
Internet-Draft                                                T. Fossati
Intended status: Informational                                    Linaro
Expires: 21 November 2025                                    20 May 2025


                 An EAT Profile for Device Attestation
                    draft-poirier-rats-eat-da-latest

Abstract

   TODO Abstract

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://example.com/LATEST.  Status information for this document may
   be found at https://datatracker.ietf.org/doc/draft-poirier-rats-eat-
   da/.

   Discussion of this document takes place on the WG Working Group
   mailing list (mailto:WG@example.com), which is archived at
   https://example.com/WG.

   Source for this draft and an issue tracker can be found at
   https://github.com/USER/REPO.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 21 November 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Device Attestation Claims
     3.1.  SPDM Claims
       3.1.1.  Measurement Claims
       3.1.2.  Certificate Claims
   4.  Collated CDDL
   5.  Security Considerations
   6.  IANA Considerations
     6.1.  New CWT Claims Registrations
     6.2.  New CBOR Tags Registrations
   7.  Normative References
   Appendix A.  Examples
   Acknowledgments
   Authors' Addresses

1.  Introduction

   TODO Introduction

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Device Attestation Claims

   da-token = {
     &(eat_profile: 265) => "tag:linaro.org,2025:device#1.0.0"
     &(eat_nonce: 10) => bytes .size 64 ; same as realm nonce
     &(eat_submods: 266) => {
       + device-name => $device-claims
     }
   }

   device-name = text .regexp "dev-[A-Za-z0-9]+"

   $device-claims /= #6.1000000(spdm-claims)
   $device-claims /= #6.1000001(cxl-claims)
   $device-claims /= #6.1000002(chi-claims)

3.1.  SPDM Claims

   spdm-claims = {
     &(measurements: 1) => {
       + block-id => spdm-measurement
       ? "signature" => spdm-measurement-blocks-signature
     }
     &(certificates: 2) => spdm-certificates
   }

   block-id = 0..239

3.1.1.  Measurement Claims

   spdm-measurement = {
     &(component-type: 1) => component-type
     measurement
   }

   measurement //= ( &(digest-measurement: 2) => digest-measurement )
   measurement //= ( &(raw-measurement: 3) => raw-measurement )

   component-type /= &(immutable-rom: 0)
   component-type /= &(mutable-firmware: 1)
   component-type /= &(hardware-config: 2)
   component-type /= &(firmware-config: 3)
   component-type /= &(freeform-measurement-manifest: 4)
   component-type /= &(device-mode: 5)
   component-type /= &(mutable-firmware-version: 6)
   component-type /= &(mutable-firmware-svn: 7)
   component-type /= &(hash-extend-measurement: 8)
   component-type /= &(informational: 9)
   component-type /= &(structured-measurement-manifest: 10)

   raw-measurement = bytes
   digest-measurement = digest

   digest = [
     alg: uint / text
     val: bytes
   ]

3.1.2.  Certificate Claims

   spdm-certificates = {
     device-cert-slot => cert-chain
     ? aux-cert-slots => cert-chain
   }

   ; ASN.1 DER-encoded certificates concatenated with no intermediate
   ; padding.
   cert-chain = bytes

   device-cert-slot = 0
   aux-cert-slots = 1..7

4.  Collated CDDL

   da-token = {
     &(eat_profile: 265) => "tag:linaro.org,2025:device#1.0.0",
     &(eat_nonce: 10) => bytes .size 64,
     &(eat_submods: 266) => {+ device-name => $device-claims},
   }
   device-name = text .regexp "dev-[A-Za-z0-9]+"
   $device-claims /= #6.1000000(spdm-claims) / #6.1000001(cxl-claims) / #6.1000002(chi-claims)
   spdm-claims = {
     &(measurements: 1) => {
           + block-id => spdm-measurement,
           ? "signature" => spdm-measurement-blocks-signature,
   },
     &(certificates: 2) => spdm-certificates,
   }
   block-id = 0 .. 239
   spdm-measurement = {
     &(component-type: 1) => component-type,
     measurement,
   }
   measurement //= (&(digest-measurement: 2) => digest-measurement // &(raw-measurement: 3) => raw-measurement)
   component-type /= &(immutable-rom: 0) / &(mutable-firmware: 1) / &(hardware-config: 2) / &(firmware-config: 3) / &(freeform-measurement-manifest: 4) / &(device-mode: 5) / &(mutable-firmware-version: 6) / &(mutable-firmware-svn: 7) / &(hash-extend-measurement: 8) / &(informational: 9) / &(structured-measurement-manifest: 10)
   raw-measurement = bytes
   digest-measurement = digest
   digest = [
     alg: uint / text,
     val: bytes,
   ]
   spdm-certificates = {
     device-cert-slot => cert-chain,
     ? aux-cert-slots => cert-chain,
   }
   cert-chain = bytes
   device-cert-slot = 0
   aux-cert-slots = 1 .. 7
   hash-algorithm-type /= &(tpm_alg_sha_256: 0) / &(tpm_alg_sha_384: 2) / &(tpm_alg_sha_512: 4) / &(tpm_alg_sha3_256: 8) / &(tpm_alg_sha3_384: 16) / &(tpm_alg_sha3_512: 32) / &(tpm_alg_sm3_256: 64)
   spdm-measurement-blocks-signature = {
     &(slot: 1) => 0 .. 7,
     &(requester-nonce: 2) => bytes .size 32,
     &(responder-nonce: 3) => bytes .size 32,
     &(combined-spdm-prefix: 4) => bytes .size 100,
     &(IL1: 5) => bytes,
     &(base-hash-algo: 6) => hash-algorithm-type,
     &(signature: 7) => bytes,
   }
   cxl-claims = {}
   chi-claims = {}

5.  Security Considerations

   TODO Security

6.  IANA Considerations

6.1.  New CWT Claims Registrations

   TODO IANA CWT allocations

6.2.  New CBOR Tags Registrations

   TODO IANA CBOR Tag allocations

7.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

Appendix A.  Examples

   {
     / profile / 265: "tag:linaro.org,2025:device#1.0.0",
     / nonce / 10: h'f9efc3341597f75f8d94432ad39566a8c5704b2004ba001c094f475bfc057f9f25d7aa40cd86cd30ebaae746fb19f008c1e6a1f23ad6a178e18dceda918f7f6e',
     / submods / 266: {
       "dev-a": 1000000({
         / measurements / 1: {
           1: {
             / component-type /  1: 2, / hardware config /
             / raw-measurement / 3: h'4f6d616861'
           }
         },
         / certificates / 2: {
           / device certs / 0: h'676f616e6e61747261646974696f6e6d6f6e676572'
           / no aux certs /
         }
       }),
       "dev-b": 1000000({
         / measurements / 1: {
           0: {
             / component-type / 1: 1, / mutable firmware /
             / digest-measurement / 2: [
               / alg / 1,
               / val / h'6b656e6e656c6c79'
             ]
           },
           6: {
             / component-type / 1: 2, / hardware config /
             / digest measurement / 2: [
               / alg / 0,
               / val / h'756e646572637279'
             ]
           }
         },
         / certificates / 2: {
           / device certs / 0: h'61746865697A656178696C6C6172',
           / aux certs (slot=2) / 2: h'23451576923AE99106783948598A'
         }
       })
     }
   }

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Mathieu Poirier
   Linaro
   Email: mathieu.poirier@linaro.org


   Thomas Fossati
   Linaro
   Email: thomas.fossati@linaro.org
